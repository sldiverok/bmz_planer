// === –î–û–í–Ü–î–ù–ò–ö –ë–ú–ó –∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—î—é ===
// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è bmz.csv —ñ –∫–æ–Ω—Ç—Ä–æ–ª—é –¥–æ—Å—Ç—É–ø—É –¥–æ admin.html
// –ê–≤—Ç–æ—Ä: sldiverok squad

async function loadCSV(departmentCode = null, admin = false) {
  try {
    console.log("[info] –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ CSV...");

    // --- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è –¥–ª—è admin ---
    if (admin) {
      const input = prompt("üîê –í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –ø–æ–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫—É:");
      const hash = md5(input || "");
      const allowed = "21232f297a57a5a743894a0e4a801fc3"; // md5('admin')

      if (hash !== allowed) {
        document.body.innerHTML =
          "<h2 style='color:red;text-align:center;margin-top:40px;'>‚ùå –î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ</h2>";
        return;
      }
      console.log("[ok] –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è ADMIN —É—Å–ø—ñ—à–Ω–∞");
    }

    const response = await fetch(
      "https://raw.githubusercontent.com/sldiverok/bmz_planer/refs/heads/main/bmz.csv"
    );
    if (!response.ok) throw new Error("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ bmz.csv");

    const data = await response.text();
    const rows = data
      .split("\n")
      .map((r) => r.trim())
      .filter((r) => r.length > 0);
    const headers = rows[0].split(";");

    const container = document.getElementById("table-container");
    let html = "<table><thead><tr>";
    headers.forEach((h) => (html += `<th>${h}</th>`));
    html += "</tr></thead><tbody>";

    let matchCount = 0;

    for (let i = 1; i < rows.length; i++) {
      const cols = rows[i].split(";");
      const row = {};
      headers.forEach((h, j) => (row[h] = cols[j] ? cols[j].trim() : ""));

      if (!departmentCode || row["–ü—ñ–¥—Ä–æ–∑–¥—ñ–ª–ö–æ–¥"] === departmentCode) {
        html += "<tr>";
        headers.forEach((h) => (html += `<td>${row[h] || ""}</td>`));
        html += "</tr>";
        matchCount++;
      }
    }

    html += "</tbody></table>";
    container.innerHTML = html;

    console.log(
      `[ok] –¢–∞–±–ª–∏—Ü—è –ø–æ–±—É–¥–æ–≤–∞–Ω–∞. –†—è–¥–∫—ñ–≤: ${matchCount}${
        departmentCode ? " (" + departmentCode + ")" : " (–≤—Å—ñ)"
      }`
    );

    if (matchCount === 0) {
      container.innerHTML +=
        "<p style='text-align:center;color:#aaa;margin-top:20px;'>–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è —Ü—å–æ–≥–æ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É.</p>";
    }
  } catch (err) {
    console.error("[ERR] –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ CSV:", err);
    const container = document.getElementById("table-container");
    container.innerHTML =
      "<p style='color:red;text-align:center;'>–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –¥–∞–Ω–∏—Ö.</p>";
  }
}

// === –ü—Ä–æ—Å—Ç–∏–π MD5 —Ä–µ–∞–ª—ñ–∑–∞—Ç–æ—Ä –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞ ===
function md5(str) {
  return CryptoJS.MD5(str).toString();
}
